{block}
<table n:class="$options->sortable ? tablesorter, 'table-renderer table table-hover table-bordered table-striped'">
    <thead>
        <tr n:inner-foreach="$components as $component1">
            {spaceless}{include #component-head, component => $component1}{/spaceless}
        </tr>
    </thead>
    <tbody>
        <tr n:foreach="$rows as $row">
            {include #component-row, row => $row|strip}
        </tr>
    </tbody>
</table>
{/block}

{define #component-row}
    {foreach $components as $component2}
        {spaceless}{include #component-body, row => $row, component => $component2}{/spaceless}
    {/foreach}
{/define}

{define #component-head}
    {if $component instanceof Tlapnet\Report\Bridges\Nette\Renderers\ExtraTable\Model\Column}
        {include #component-column-head, component => $component}
    {elseif $component instanceof Tlapnet\Report\Bridges\Nette\Renderers\ExtraTable\Model\Action}
        {include #component-action-head, component => $component}
    {elseif $component instanceof Tlapnet\Report\Bridges\Nette\Renderers\ExtraTable\Model\Blank}
        {include #component-blank-head, component => $component}
    {else}
        Unsupported component!
    {/if}
{/define}

{define #component-body}
    {if $component instanceof Tlapnet\Report\Bridges\Nette\Renderers\ExtraTable\Model\Column}
        {include #component-column-body, row => $row, component => $component}
    {elseif $component instanceof Tlapnet\Report\Bridges\Nette\Renderers\ExtraTable\Model\Action}
        {include #component-action-body, row => $row, component => $component}
    {elseif $component instanceof Tlapnet\Report\Bridges\Nette\Renderers\ExtraTable\Model\Blank}
        {include #component-blank-body, row => $row, component => $component}
    {else}
        Unsupported component!
    {/if}
{/define}

{********************************************************************}
{***************************** COLUMN *******************************}
{********************************************************************}

{define #component-column-head}
    {* column options *}
    {var $options => $component->getOptions()}

    {* column classes *}
    {var $classes => []}
    {if $options->align}{php $classes[] = 'align-' . $options->align}{/if}
    {if $options->sortable === FALSE}{php $classes[] = 'sorter-false'}{/if}
    {if $options->type === 'date'}{php $classes[] = 'sorter-shortDate dateFormat-ddmmyyyy'}{/if}
    {if $options->type === 'datetime'}{php $classes[] = 'sorter-shortDate dateFormat-ddmmyyyy'}{/if}

    <th n:class="(expand)$classes">{$component->getTitle()}</th>
{/define}

{define #component-column-body}
    {* column options *}
    {var $options => $component->getOptions()}

    {* column classes *}
    {var $classes => []}
    {if $options->align}{php $classes[] = 'align-' . $options->align}{/if}

    {* column attributes *}
    {var $link => $component->getLink()}
    {var $url => $component->getUrl()}
    {var $label => $component->getLabel()}
    {var $callback => $component->getCallback()}

    <td n:class="(expand)$classes">
        <a n:tag-if="$url" href="{$url->url}">
            <a n:tag-if="$link" href="{$link, $row|linker}">
                {if $label}
                    {$label->name}
                {else}
                    {if $callback}
                        {=$callback($row, $component)|noescape}
                    {else}
                        {$row[$component->getName()]}
                    {/if}
                {/if}
            </a>
        </a>
    </td>
{/define}

{********************************************************************}
{***************************** ACTION *******************************}
{********************************************************************}

{define #component-action-head}
    <th>{$component->getTitle()}</th>
{/define}


{define #component-action-body}
    {* column attributes *}
    {var $link => $component->getLink()}
    {var $label => $component->getLabel()}

    <td>
        <a n:tag-if="$link" href="{$link, $row|linker}">
            {$label->name}
        </a>
    </td>
{/define}

{********************************************************************}
{***************************** BLANK ********************************}
{********************************************************************}

{define #component-blank-head}
    <th></th>
{/define}

{define #component-blank-body}
    {* blank attributes *}
    {var $callback => $component->getCallback()}

    <td>{=$callback($row, $component)|noescape}</td>
{/define}
